/*
意义输出点阵数字 8个char即可保存64个位的数据，例如3：
a[3]（{0x00,0x1e,0x30,0x30,0x1c,0x30,0x30,0x1e}, //3
包括有8个十六进制的数，每行一个十六进制数，并且换成二进制的表示，会是什么样的呢？

00000000  //0x00
00011110  //0x1e
00110000  //0x30
00110000  //0x30
00011100  //0x1c
00110000  //0x30
00110000  //0x30
00011110  //0x1e
请看1出现的地方，可以借着鼠标按1出现的轨迹跟着划一划，不就是 数字3字型的轮廓吗？
只不过，耳朵状的3是反着的（这自有道理，看完程序1自会明白）。
――――――――――――――――
*/
#if 0

#include <iostream>
using namespace std;
char a[10][8]=   // 一个数组存放10个数字，每个数字是一个一维数组，
{
    {0x00,0x18,0x24,0x24,0x24,0x24,0x24,0x18}, //0   8*8个位
    {0x00,0x18,0x1c,0x18,0x18,0x18,0x18,0x18}, //1
    {0x00,0x1e,0x30,0x30,0x1c,0x06,0x06,0x3e}, //2
    {0x00,0x1e,0x30,0x30,0x1c,0x30,0x30,0x1e}, //3
    {0x00,0x30,0x38,0x34,0x32,0x3e,0x30,0x30}, //4
    {0x00,0x1e,0x02,0x1e,0x30,0x30,0x30,0x1e}, //5
    {0x00,0x1c,0x06,0x1e,0x36,0x36,0x36,0x1c}, //6
    {0x00,0x3f,0x30,0x18,0x18,0x0c,0x0c,0x0c}, //7
    {0x00,0x1c,0x36,0x36,0x1c,0x36,0x36,0x1c}, //8
    {0x00,0x1c,0x36,0x36,0x36,0x3c,0x30,0x1c}, //9
};
int main()
{
    int i,j,x;
    int b[8];   //用于将字模中需要的某一行数据以二进制形式保存下来 
    for(int n=0;n<=9;n++)
        for(i=0; i<8; i++)
        {
            x=a[n][i];  //a[n][i]，取要显示的数字n对应字模中的第i个数据x，这是要在每i行显示  
            for(j=0; j<8; j++)  //这个循环找出x以二进制的形式，保存在b数组中
            {
                b[j]=x%2;
                x=x/2;
            }   //注意b中放的数据是x的倒序，例0x30对应的二进制是00110000，b中存入的却是00001100  
            for(j=0; j<8; j++)  //输出b，为1输出*(你可以设置别的符号)，为0是空格，当然字型不会是反的了
            {
                if(b[j]%2)
                    cout<<'*';
                else
                    cout<<' ';
            }
            cout<<endl;
        }
        
        while(1);
        return 0;
}




#endif

/*

*/
#if 0

#include <iostream>
using namespace std;
char a[10][8]=
{
    {0x00,0x18,0x24,0x24,0x24,0x24,0x24,0x18}, //0
    {0x00,0x18,0x1c,0x18,0x18,0x18,0x18,0x18}, //1
    {0x00,0x1e,0x30,0x30,0x1c,0x06,0x06,0x3e}, //2
    {0x00,0x1e,0x30,0x30,0x1c,0x30,0x30,0x1e}, //3
    {0x00,0x30,0x38,0x34,0x32,0x3e,0x30,0x30}, //4
    {0x00,0x1e,0x02,0x1e,0x30,0x30,0x30,0x1e}, //5
    {0x00,0x1c,0x06,0x1e,0x36,0x36,0x36,0x1c}, //6
    {0x00,0x3f,0x30,0x18,0x18,0x0c,0x0c,0x0c}, //7
    {0x00,0x1c,0x36,0x36,0x1c,0x36,0x36,0x1c}, //8
    {0x00,0x1c,0x36,0x36,0x36,0x3c,0x30,0x1c}, //9
};
int main()
{
    int n=0,i,j,x;
    cout<<"请输入需要显示的数字：";
    cin>>n;
    for(i=0; i<8; i++)
    {
        x=a[n][i];
        for(j=0; j<8; j++)
        {
            if(x%2)
                cout<<'*';
            else
                cout<<' ';
            x=x/2;
        }
        cout<<endl;
    }
    return 0;
}




#endif

#if 1
#include <iostream>
using namespace std;
char a[10][8]=
{
    {0x00,0x18,0x24,0x24,0x24,0x24,0x24,0x18}, //0
    {0x00,0x18,0x1c,0x18,0x18,0x18,0x18,0x18}, //1
    {0x00,0x1e,0x30,0x30,0x1c,0x06,0x06,0x3e}, //2
    {0x00,0x1e,0x30,0x30,0x1c,0x30,0x30,0x1e}, //3
    {0x00,0x30,0x38,0x34,0x32,0x3e,0x30,0x30}, //4
    {0x00,0x1e,0x02,0x1e,0x30,0x30,0x30,0x1e}, //5
    {0x00,0x1c,0x06,0x1e,0x36,0x36,0x36,0x1c}, //6
    {0x00,0x3f,0x30,0x18,0x18,0x0c,0x0c,0x0c}, //7
    {0x00,0x1c,0x36,0x36,0x1c,0x36,0x36,0x1c}, //8
    {0x00,0x1c,0x36,0x36,0x36,0x3c,0x30,0x1c}, //9
};
int main()
{
    int n=0,i,j,k,m,x;
    cout<<"请输入需要显示的数字：";
    int c[8];
    cin>>n;
    for(k=0; n&&k<8; k++)   //c数组将分离出n中的各位数，不过是倒着的，例n=123，c中保存3 2 1
    {
        c[k]=n%10;
        n/=10;
    }  //循环结束，将由k记住n是几位数，此处限最多8位数
    
    for(i=0; i<8; i++)   //一共要显示8行，不是依次显示k个数字，而是依次显示k个数字中对应的每一行
    {
        for(m=k-1; m>=0; m--)  //要显示n=123, c中是倒着保存各位数的，所以m由大到小
        {
 
            x=a[c[m]][i];     //现在要显示的数字是c[m]，所以取a数组中的第c[m]行，第i列数据
            for(j=0; j<8; j++)
            {
                if(x%2)
                    cout<<'*';
                else
                    cout<<' ';
                x=x/2;
            }
        }
        cout<<endl;
    }
    while(1);
    return 0;
}

#endif

#if 0


#endif
/*

*/