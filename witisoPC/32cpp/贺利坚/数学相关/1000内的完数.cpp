/* 程序头部注释开始
 * 程序的版权和版本声明部分
 * Copyright (c) 2011, 烟台大学计算机学院
 * All rights reserved.
 * 文件名称：completeNumber.cpp
 * 作    者：贺利坚
 * 完成日期： 2011 年 11 月 15 日
 * 版 本 号： v1.0
 * 对任务及求解方法的描述部分
 * 输入描述：无
 * 问题描述：一个数如果恰好等于它的因子之和，这个数就称为“完数”。例如6=1＋2＋3，再如8的因子和是7（即1+2+4），8不是完数。编程找出1000以内的所有完数。
 * 程序输出：1000以内的所有完数
 * 问题分析：首先从2到1000构造循环控制变量为i的外层循环。每次循环中，利用内嵌的循环逐个地求出i的因子，并累加起来（为提高效率，可能考虑因子的对称性，即j为小于sqrt(i)的因子，则一定有i/j也是因子），若累加和与i相等，则i是完全数，输出。然后继续循环，考察i+1……
 * 算法设计：……
 * 程序头部的注释结束
 */
 
#include <iostream>
#include<Cmath>
using namespace std;
int main( )
{
  int i,s,j;
  cout<<"2-1000之间的完数有：";
  for(i=2;i<=1000;i++)
  {
    s=1; //1是任何数的因子，所以不再s=1，也使下一句可以从2开始
    for(j=2;j<sqrt(i);j++)   //正因为j从2开始，才有胆量让j到sqrt(i)
      if(i%j==0) s+=(j+i/j);  //加上j的同时，和j对称的那个因子（i/j)也被累加了
                             //思考：如果j允许从1开始，上式会将i本身也累加上去
    if(i==s) cout<<i<<"  ";
  }
  cout<<endl;
  while(1);
  return 0;
}